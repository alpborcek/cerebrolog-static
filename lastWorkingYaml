name: Deploy to Firebase Hosting on merge

on:
  # push:
  #   branches:
  #     - "flutterflow" # or your designated branch
  #   paths:
  #     - "lib/**"
  #     - "pubspec.yaml"

  # ‚ûï Manual trigger from the Actions tab
  workflow_dispatch: # ‚Üê add this

jobs:
  build_and_deploy:
    runs-on: windows-latest

    steps:
      # 1Ô∏è‚É£  Checkout the FlutterFlow export
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£  Patch pubspec.yaml so CI always resolves
      - name: Patch pubspec.yaml (intl & timeago)
        shell: bash
        run: |
          echo "üîß Updating intl ‚Üí ^0.20.2 and timeago ‚Üí ^3.7.1"
          # ---- bump / add the regular dependencies ----
          grep -qE '^[[:space:]]*intl:' pubspec.yaml \
            && sed -i -E 's/^[[:space:]]*intl:[[:space:]]+[^#[:space:]]+/  intl: ^0.20.2/' pubspec.yaml \
            || sed -i -E '/^dependencies:/a\  intl: ^0.20.2' pubspec.yaml

          grep -qE '^[[:space:]]*timeago:' pubspec.yaml \
            && sed -i -E 's/^[[:space:]]*timeago:[[:space:]]+[^#[:space:]]+/  timeago: ^3.7.1/' pubspec.yaml \
            || sed -i -E '/^dependencies:/a\  timeago: ^3.7.1' pubspec.yaml

          # ---- ensure dependency_overrides block is present ----
          if ! grep -q '^dependency_overrides:' pubspec.yaml ; then
            echo -e '\ndependency_overrides:' >> pubspec.yaml
          fi

          # ---- enforce overrides (belt-and-suspenders) ----
          grep -qE '^[[:space:]]*intl:[[:space:]]+\^?0\.20\.2' pubspec.yaml \
            || sed -i -E '/^dependency_overrides:/a\  intl: ^0.20.2' pubspec.yaml

          grep -qE '^[[:space:]]*timeago:[[:space:]]+\^?3\.7\.1' pubspec.yaml \
            || sed -i -E '/^dependency_overrides:/a\  timeago: ^3.7.1' pubspec.yaml

          echo "Resulting overrides:"
          grep -n -A2 -B0 '^dependency_overrides:' pubspec.yaml

      # 3Ô∏è‚É£  Set up Node.js (firebase-tools needs it)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      # 4Ô∏è‚É£  Set up Flutter SDK
      - name: Set up Flutter
        uses: monterail/flutter-action@v2

      # 5Ô∏è‚É£  Cache Flutter packages (key uses *patched* pubspec.yaml)
      - name: Cache Flutter Pub Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      # 6Ô∏è‚É£  (Optional) bump collection if FlutterFlow pins an old version
      - name: Update pubspec.yaml for collection dependency
        shell: bash
        run: |
          sed -i -E 's/collection:[[:space:]]+1\.19\.0/collection: ^1.19.1/' pubspec.yaml || true

      # 7Ô∏è‚É£  Install Dart/Flutter deps
      - name: Get Flutter dependencies
        run: flutter pub get

      # 8Ô∏è‚É£  Build the Flutter Web app
      - name: Build Flutter Web App
        run: flutter build web --release

      # 9Ô∏è‚É£  Bring in static assets repo
      - name: Checkout static assets
        uses: actions/checkout@v4
        with:
          repository: alpborcek/cerebrolog-static
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}
          path: static_assets

      # üîç Verify static assets
      - name: List static assets directory
        shell: bash
        run: |
          echo "Listing contents of static_assets directory:"
          ls -la static_assets

      # üîÑ Copy static assets into the build
      - name: Copy static assets
        shell: bash
        run: |
          cp static_assets/firebase.json firebase.json
          cp static_assets/sitemap.xml build/web/sitemap.xml
          cp static_assets/robots.txt build/web/robots.txt
          cp static_assets/Icon-192.png build/web/icons/Icon-192.png
          cp static_assets/Icon-512.png build/web/icons/Icon-512.png
          cp static_assets/dashRequirements.webp build/web/dashRequirements.webp
          cp static_assets/dashGraph.webp build/web/dashGraph.webp         
          cp static_assets/dashTable.webp build/web/dashTable.webp
          cp static_assets/enterData.webp build/web/enterData.webp
          cp static_assets/pad.xml build/web/pad.xml

      # üöÄ Deploy to Firebase Hosting
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_GAZI_LOG_SURGERY_30LGPZ }}
          channelId: live
          projectId: gazi-log-surgery-30lgpz
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks
